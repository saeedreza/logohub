name: Generate Logo Screenshots

on:
  pull_request:
    paths:
      - 'logos/**'
  push:
    branches:
      - main
    paths:
      - 'logos/**'
  workflow_dispatch:

jobs:
  generate-screenshots:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        
      - name: Generate logo screenshots
        run: |
          # Create screenshots directory
          mkdir -p screenshots
          
          # Generate screenshots for all logos
          for logo_dir in logos/*/; do
            logo_name=$(basename "$logo_dir")
            
            # Skip if not a directory or is sample
            if [ ! -d "$logo_dir" ] || [ "$logo_name" = "sample-company" ]; then
              continue
            fi
            
            echo "ðŸ“¸ Generating screenshot for $logo_name..."
            
            # Create a simple HTML file to render the logo
            cat > temp-logo.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <style>
              body { 
                margin: 0; 
                padding: 40px; 
                background: white; 
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
              }
              .logo-container { 
                display: flex; 
                align-items: center; 
                gap: 20px; 
                max-width: 800px;
              }
              .logo { 
                width: 64px; 
                height: 64px; 
              }
              .logo-info {
                flex: 1;
              }
              .logo-name { 
                font-size: 24px; 
                font-weight: 600; 
                margin: 0 0 8px 0;
              }
              .logo-variants {
                display: flex;
                gap: 16px;
                margin-top: 16px;
              }
              .variant {
                text-align: center;
              }
              .variant img {
                width: 48px;
                height: 48px;
                border: 1px solid #eee;
                border-radius: 8px;
                padding: 8px;
              }
              .variant-label {
                font-size: 12px;
                color: #666;
                margin-top: 4px;
              }
            </style>
          </head>
          <body>
            <div class="logo-container">
              <img class="logo" src="$logo_dir${logo_name}-standard.svg" alt="$logo_name logo">
              <div class="logo-info">
                <h1 class="logo-name">$logo_name</h1>
                <div class="logo-variants">
                  <div class="variant">
                    <img src="$logo_dir${logo_name}-standard.svg" alt="Standard">
                    <div class="variant-label">Standard</div>
                  </div>
                  <div class="variant">
                    <img src="$logo_dir${logo_name}-monochrome.svg" alt="Monochrome">
                    <div class="variant-label">Monochrome</div>
                  </div>
                </div>
              </div>
            </div>
          </body>
          </html>
          EOF
            
            # Generate screenshot using Playwright
            npx playwright screenshot temp-logo.html "screenshots/${logo_name}.png" --viewport-size=800,200
            
            # Clean up
            rm temp-logo.html
          done
          
      - name: Upload screenshots as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: logo-screenshots
          path: screenshots/
          retention-days: 30
          
      - name: Comment PR with screenshot info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ðŸ“¸ Logo Screenshots Generated
            
            âœ… Logo screenshots have been generated and are available as artifacts.
            
            **Download:** Check the "Artifacts" section in this workflow run to download the screenshots.
            
            **Note:** Screenshots show both standard and monochrome variants of each logo.
            
            ---
            *This comment was automatically generated by the Logo Screenshots workflow.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 